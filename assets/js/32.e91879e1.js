(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{391:function(t,a,s){"use strict";s.r(a);var r=s(10),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"分治思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分治思想"}},[t._v("#")]),t._v(" 分治思想")]),t._v(" "),s("h2",{attrs:{id:"算法思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法思想"}},[t._v("#")]),t._v(" 算法思想")]),t._v(" "),s("p",[t._v("将一个复杂问题"),s("strong",[t._v("分成两个或者多个相似的子问题")]),t._v("，子问题继续划分，直到子问题可以简单求解。")]),t._v(" "),s("p",[s("strong",[t._v("原问题的解是子问题的合并")])]),t._v(" "),s("h2",{attrs:{id:"案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),s("p",[t._v("归并排序，二叉树遍历，傅里叶变换")]),t._v(" "),s("h2",{attrs:{id:"具体策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体策略"}},[t._v("#")]),t._v(" 具体策略")]),t._v(" "),s("p",[s("strong",[t._v("最常见的分治法是二分法")]),t._v("。 三分法？？？")]),t._v(" "),s("p",[t._v("每次将问题难度降低为原问题的一半")]),t._v(" "),s("h2",{attrs:{id:"基本步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本步骤"}},[t._v("#")]),t._v(" 基本步骤")]),t._v(" "),s("ol",[s("li",[t._v("分解，递归分层生成子问题")]),t._v(" "),s("li",[t._v("解决子问题，返回子结果")]),t._v(" "),s("li",[t._v("逐层合并子结果")])])])}),[],!1,null,null,null);a.default=v.exports}}]);