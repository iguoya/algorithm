(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{394:function(t,s,e){"use strict";e.r(s);var n=e(10),r=Object(n.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h1",{attrs:{id:"回溯法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回溯法"}},[this._v("#")]),this._v(" 回溯法")]),this._v(" "),s("p",[this._v("在所有可能的解的空间树中,依照深度优先策略,从根节点生成解空间树,搜索空间树的任一子节点时,判断该节点是否满足问题的解,不过不满足,则跳过对该节点为根的子树的生成和判断.同时向父节点回溯.")])])}),[],!1,null,null,null);s.default=r.exports}}]);