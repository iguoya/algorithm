(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{364:function(n,a,t){"use strict";t.r(a);var r=t(10),e=function(n){n.options.__data__block__={mermaid_1a96284d:'graph LR\nA((基础算法))==>B(穷举法)\nB====B1>"对所有可能情况逐个讨论"]\nB==>B2{找出100范围内的所有素数}\n\nA==>C(迭代法)\nC====C1>"由一个量求出一个新值,通过新值求出下一个新值,最终求解"]\nC==>C2{"n项求和,阶乘<br/>辗转相除法(存在迭代公式)"}\n\nA==>D(递推法)\nD====D1>"由已知条件,逐步求出中间结果和最终结果"]\nD==>D2{斐波那契数列}\n\nA==>E(递归法)\nE==>E1>"一个过程直接或者间接的调用自身"]\nE==>E2{汉诺,关于树的相关算法}\nE==>E3(存在成熟技术,将递归算法改写为非递归算法)\n\nstyle E fill:#ff6666\nstyle E3 fill:orange\n',mermaid_1a962851:'graph LR\nA((高级算法))==>B(分治法 divide and conquer)\nB====B1>"将大问题分割为若干规模较小的子问题,分而治之"]\nB==>B2{快速排序, 归并排序}\n\nA==>C(回溯法 Back Tracking Method)\nC====C1>"系统的搜索问题所有的解"]\nstyle B fill:#FF9966\nstyle C fill:#FFFF00\n'}},i=Object(r.a)({},(function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"基本算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本算法"}},[n._v("#")]),n._v(" 基本算法")]),n._v(" "),t("Mermaid",{attrs:{id:"mermaid_1a96284d",graph:n.$dataBlock.mermaid_1a96284d}}),t("h2",{attrs:{id:"高级算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高级算法"}},[n._v("#")]),n._v(" 高级算法")]),n._v(" "),t("Mermaid",{attrs:{id:"mermaid_1a962851",graph:n.$dataBlock.mermaid_1a962851}})],1)}),[],!1,null,null,null);"function"==typeof e&&e(i);a.default=i.exports}}]);