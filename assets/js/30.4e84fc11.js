(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{379:function(t,e,r){"use strict";r.r(e);var s=r(10),a=function(t){t.options.__data__block__={mermaid_382ee1a2:'graph TD\nstr("substring(~)")\nstr--\x3estrlen{str.size < m}--\x3e|yes|empty\nstrlen--\x3e|no|eqm{0 == m ?}--\x3e|yes|add_result(将该可行性 route存入 result)\n\neqm--\x3e|no|ltm{m>0?}==>|yes|route_add_node("遍历 string 从 str取一个元素, 放入route")==>new_patam("将剩下的 string 作为新的参数str ")==>less_str("substring(m-1)")\n\n'}},n=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"求子串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#求子串"}},[t._v("#")]),t._v(" 求子串")]),t._v(" "),r("p",[t._v("求 长度为 n 的字符串  所有的长度为m 的子串(n>m)")]),t._v(" "),r("h2",{attrs:{id:"函数接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数接口"}},[t._v("#")]),t._v(" 函数接口")]),t._v(" "),r("p",[t._v("​")]),t._v(" "),r("p",[t._v("Substring(string str, size_t m,  string &route, vector"),r("string",[t._v(" result)")])],1),t._v(" "),r("ul",[r("li",[r("p",[t._v("str 待处理的 str")])]),t._v(" "),r("li",[r("p",[t._v("m 子串的长度")])]),t._v(" "),r("li",[r("p",[t._v("route 某一子串")])]),t._v(" "),r("li",[r("p",[t._v("result 子串集合")])])]),t._v(" "),r("h2",{attrs:{id:"流程图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流程图"}},[t._v("#")]),t._v(" 流程图")]),t._v(" "),r("Mermaid",{attrs:{id:"mermaid_382ee1a2",graph:t.$dataBlock.mermaid_382ee1a2}})],1)}),[],!1,null,null,null);"function"==typeof a&&a(n);e.default=n.exports}}]);