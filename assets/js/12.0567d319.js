(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{362:function(a,n,t){"use strict";t.r(n);var r=t(10),e=function(a){a.options.__data__block__={mermaid_1a962850:"graph TB;\nA(算法)==>B(输入)\nA==>D(有穷性)\nA==>E(确定性)\nA==>F(可行性)\nA==>C(输出)\n\nB==>G(0个或n个输入)\nC==>H(0个或n个输出)\nD==>I(有限时间内完成)\nE==>J(同样的输入会产生同样的结果)\nF==>K(可以编程实现)\n\n",mermaid_382ee145:"graph LR;\nA(算法设计要求)==>B(正确性)\nB-.-C(无语法错误)\nB-.-D(合法输入能够产生符合要求的输出)\nB-.-E(非法输入能够产生说明)\nB-.-F(边界处理)\nA==>G(可读性)\nG-.-H(便于他人日后阅读和修改)\nA==>I(健壮性)\nI-.-J(输入数据不合法,能够做出妥善的处理,不是产生异常/崩溃/莫名其妙的结果)\nA==>K(时间效率高)\nA==>L(存储空间少)\n"}},s=Object(r.a)({},(function(){var a=this,n=a.$createElement,t=a._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"算法设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法设计原则"}},[a._v("#")]),a._v(" 算法设计原则")]),a._v(" "),t("h2",{attrs:{id:"基本算法要求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本算法要求"}},[a._v("#")]),a._v(" 基本算法要求")]),a._v(" "),t("Mermaid",{attrs:{id:"mermaid_1a962850",graph:a.$dataBlock.mermaid_1a962850}}),t("h2",{attrs:{id:"优良算法判定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优良算法判定"}},[a._v("#")]),a._v(" 优良算法判定")]),a._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee145",graph:a.$dataBlock.mermaid_382ee145}})],1)}),[],!1,null,null,null);"function"==typeof e&&e(s);n.default=s.exports}}]);